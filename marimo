#!/bin/zsh

#
# Copyright (c) 2024, Sewaddle
# 
# marimo is relesased under the MIT license.
# See LICENSE file for details.
# 
# Created 2024-7-24
# Last uploaded 2024-12-12
#

# 設定ファイルのパス
MARIMO_FILE=~/.marimo_data

# 言語判定
lang=$(echo $LANG | cut -d '_' -f 1)

initialize_marimo() {
  echo "name=Marimo" > $MARIMO_FILE
  echo "size=1.000000" >> $MARIMO_FILE
  echo "water_quality=100" >> $MARIMO_FILE
  echo "last_updated=$(date +%s)" >> $MARIMO_FILE
}

load_marimo_data() {
  if ! [ -f $MARIMO_FILE ]; then
    initialize_marimo
  fi
  source $MARIMO_FILE
}

save_marimo_data() {
  echo "name=$name" > $MARIMO_FILE
  echo "size=$size" >> $MARIMO_FILE
  echo "water_quality=$water_quality" >> $MARIMO_FILE
  echo "last_updated=$last_updated" >> $MARIMO_FILE
}

update_marimo_growth() {
  local now=$(date +%s)
  local time_diff=$((now - last_updated))

  # 水質に基づく成長率の計算
  local growth_rate_per_second=$(printf "%.8f" "$(echo "scale=8; ($water_quality / 100) * 0.000007" | bc)")
  local growth=$(printf "%.8f" "$(echo "scale=8; $growth_rate_per_second * $time_diff" | bc)")
  
  # 新しい大きさの計算
  local new_size=$(printf "%.6f" "$(echo "scale=6; $size + $growth" | bc)")
  
  # 水質の減少を秒単位で計算
  local water_quality_decrease_per_second=$(printf "%.8f" "$(echo "scale=8; 1 / (30 * 60)" | bc)")
  local water_quality_decrease=$(printf "%.8f" "$(echo "scale=8; $water_quality_decrease_per_second * $time_diff" | bc)")
  local new_water_quality=$(printf "%.0f" "$(echo "$water_quality - $water_quality_decrease" | bc)")
  [ $new_water_quality -lt 0 ] && new_water_quality=0

  last_updated=$now
  size=$new_size
  water_quality=$new_water_quality

  save_marimo_data
}

print_marimo_status() {
  if [[ $lang == "ja" ]]; then
    echo "$name  水質:$water_quality%  大きさ:$(printf "%.6f" $size)mm"
  else
    echo "$name  Water-Quality:$water_quality%  Size:$(printf "%.6f" $size)mm"
  fi
}

handle_options() {
  update_marimo_growth
  
  local option1=$1
  local option2=$2

  if [[ -n $option2 ]]; then
    if [[ $lang == "ja" ]]; then
      echo "marimo: オプションは併用できません。"
    else
      echo "marimo: options cannot be used together."
    fi
    return 1
  fi

  case $option1 in
    -cw)
      # 水換えオプション
      water_quality=100
      if [[ $lang == "ja" ]]; then
        echo "水換えしました。"
      else
        echo "Changed water."
      fi
      ;;
    -wq)
      # 水質表示オプション(何もせずにステータスを表示)
      ;;
    -r)
      # リセットオプション
      if [[ $lang == "ja" ]]; then
        read "reset?まりもの成長をリセットしますか？ (y/n): "
      else
        read "reset?Do you want to reset marimo growth? (y/n): "
      fi
      if [[ $reset == "y" ]]; then
        initialize_marimo
        source $MARIMO_FILE  # Initialize後新しいデータを読み込み直す
        if [[ $lang == "ja" ]]; then
          echo "リセットしました。"
        else
          echo "Reseted marimo."
        fi
      fi
      ;;
    -n)
      # 名前変更オプション
      if [[ $lang == "ja" ]]; then
        read "new_name?名前を変更してください: "
        echo "名前を変更しました。"
      else
        read "new_name?Change name?: "
        echo "Changed name."
      fi
      name=$new_name
      ;;
    "")
      # オプションが指定されていない場合は、marimoのステータスを表示する
      ;;
    *)
      if [[ $lang == "ja" ]]; then
        echo "marimo: $option1 は無効なオプションです。"
        echo "使用法: marimo [-wq 水質] [-cw 水換え] [-n 名前] [-r リセット]"
      else
        echo "marimo: Invalid argument $option1"
        echo "usage: marimo [-wq water-quality] [-cw change-water] [-n name] [-r reset]"
      fi
      return 1
      ;;
  esac

  save_marimo_data
  return 0
}

main() {
  load_marimo_data
  handle_options "$@"
  if [[ $? -ne 0 ]]; then
    exit 1
  fi
  print_marimo_status
}

main "$@"
